@startuml

'Палитра
'#D6E8CA
'#CAD0E8
'#F7CDFF

skinparam class {
	ArrowColor black
	BorderColor black
}

skinparam stereotypeCBackgroundColor YellowGreen
skinparam shadowing false


class Main #ffffff
Main *-- TileManager
Main *-- CardManager
Main *-- UserController


class UserController #ffffff {
    - pickedCreature
}
UserController --> TileManager
UserController --> CardManager


''' Про это смотри cards.puml, тут очень упощеная ее часть
class CardManager #fff {
    + addCard()
    + createFieldObject()
    + getCardById()
}
CardManager *-- Card
CardManager *-- CardInFieldManager
CardManager *-- CardGroupManager


class TileManager #ffffff {
}
TileManager *--> TileView


class CardInFieldManager #fff {
    - getCardByPoint
}
CardInFieldManager --> Card


abstract class CardGroupManager #fff {
}
CardGroupManager --> Card


class Hand #fff
CardGroupManager <|-- Hand


class Table #fff
CardGroupManager <|-- Table


class Graveyard #fff
CardGroupManager <|-- Graveyard


class Deck #fff
CardGroupManager <|-- Deck


class Card #fff
Card *-- CreatureView
Card *-- AreaView
Card *-- CardView


abstract class CardView #CAD0E8
CardView --> PhaserWrapper


class CreatureCardView #CAD0E8
CardView <|-- CreatureCardView


class AreaCardView #CAD0E8
CardView <|-- AreaCardView


abstract class FieldObjectView #D6E8CA
FieldObjectView <|-- TileView
FieldObjectView <|-- CreatureView
FieldObjectView <|-- AreaView
FieldObjectView --> PhaserWrapper


class CreatureView #D6E8CA
class AreaView #D6E8CA
class TileView #D6E8CA


class PhaserWrapper #ffffff {
    + game
}
PhaserWrapper --> phaser.game


package "phaser" #DDDDDD {
    class game #fff
}
@enduml
