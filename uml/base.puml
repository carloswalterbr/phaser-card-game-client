@startuml

package "gama" {
    abstract class BaseController


    abstract class FiledObjectsView


    abstract class CardView


    class FiledController {
        - pickedCreature: Creature
    }
    FiledController *-- TileController
    FiledController *-- CreatureController
    FiledController *-- AreaController


    class CardView


    class CardViewController
    CardViewController --> CardView


    '''Tile'''
    class TileController
    BaseController <|-- TileController
    TileController *-- Tile


    class Tile
    Tile *-- TileView


    class TileView
    FiledObjectsView <|-- TileView
    TileView --> phaser.game


    '''Creature'''
    class CreatureController {
        - creatureList
        + goToPosition(creature: Creature, x, y)
        + attack(creature1: Creature, creature2: Creature)
    }
    BaseController <|-- CreatureController
    CreatureController *-- Creature


    class Creature {
        + attack(creature: Creature)
        + takeDamage(damage: int)
    }
    Creature *-- CreatureView
    Creature *-- CreatureCardView


    class CreatureView
    FiledObjectsView <|-- CreatureView
    CreatureView --> phaser.game


    class CreatureCardView
    CardView <|-- CreatureCardView
    CreatureCardView --> phaser.game


    '''Area'''
    class AreaController
    BaseController <|-- AreaController
    AreaController *-- Area


    class Area
    Area *-- AreaView
    Area *-- AreaCardView


    class AreaView
    FiledObjectsView <|-- AreaView
    AreaView --> phaser.game


    class AreaCardView
    CardView <|-- AreaCardView
    AreaCardView --> phaser.game
}


package "phaser" #DDDDDD {
    class game
}
@enduml